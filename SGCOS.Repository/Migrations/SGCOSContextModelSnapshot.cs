// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGCOS.Repository;

namespace SGCOS.Repository.Migrations
{
    [DbContext(typeof(SGCOSContext))]
    partial class SGCOSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("SGCOS.Domain.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Marca");

                    b.Property<string>("Modelo");

                    b.Property<string>("NrSerie");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("SGCOS.Domain.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Defeito");

                    b.Property<DateTime>("DtAtendimento");

                    b.Property<int>("EquipamentoId");

                    b.Property<string>("Observacao");

                    b.Property<string>("PecasSubstituidas");

                    b.Property<int>("QtdDiasGarantia");

                    b.Property<string>("ServicosExecutados");

                    b.Property<decimal>("ValorServico");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("SGCOS.Domain.Servico", b =>
                {
                    b.HasOne("SGCOS.Domain.Equipamento")
                        .WithMany("Servicos")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
